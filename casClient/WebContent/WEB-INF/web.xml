<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  
  	 <!--******************单点登录CAS配置begin ********************-->

 	<!--之前。。。。报错，是csdn上的那个教程，回去找找原因。。。-->

   <!-- 用于实现单点登出功能  可选 -->

   <listener>

        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>

   </listener>

   

   <!-- 登出功能，单点退出配置，一定要放在其他filter之前可选 -->

   <filter>

        <filter-name>casSingleSignOutFilter</filter-name>

        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>

        <init-param>

            <param-name>casServerUrlPrefix</param-name>

            <param-value>http://127.0.0.1:8081/cas/</param-value>

        </init-param>

   </filter>

   <filter-mapping>

        <filter-name>casSingleSignOutFilter</filter-name>

        <url-pattern>/*</url-pattern>

   </filter-mapping>

 

<!-- *****************************************************************-->

   <!-- 指定哪些URL需要被cas拦截，必须 -->

   <filter>

        <filter-name>CASFilter</filter-name>

        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>

        <init-param>

            <!--casServerLoginUrl:cas服务的登陆url -->

            <param-name>casServerLoginUrl</param-name>

            <param-value>http://127.0.0.1:8081/cas/login</param-value>

        </init-param>

        <init-param>

            <!--serverName:本项目的ip+port -->

            <param-name>serverName</param-name>

            <param-value>http://localhost:8081/casClient</param-value>

        </init-param>

        <init-param>

            <param-name>useSession</param-name>

            <param-value>true</param-value>

        </init-param>

        <init-param>

            <param-name>redirectAfterValidation</param-name>

            <param-value>true</param-value>

        </init-param>

        <init-param> 

          

 <!-- 忽略的(也就是不需要拦截的)URL例如我访问http://localhost:8080/springAndCas/staticres/js/login/login.js就不会被拦截-->

            <param-name>ignorePattern</param-name> 

            <!-- <param-value>/staticres/css/|/staticres/js/|/springAndCas/login$|/springAndCas/logout$</param-value>   -->

            <param-value>/staticres/css/|/staticres/js/</param-value>

        </init-param>

   </filter>

   <filter-mapping>

        <filter-name>CASFilter</filter-name>

        <url-pattern>/*</url-pattern>

   </filter-mapping>

<!--***************************************************************** -->

 

   <!-- 该过滤器对HttpServletRequest请求包装，可通过HttpServletRequest的getRemoteUser()方法获得登录用户的登录名，可选 -->

 

   <filter>

        <filter-name>casHttpServletRequestWrapperFilter</filter-name>

        <filter-class>

           org.jasig.cas.client.util.HttpServletRequestWrapperFilter

        </filter-class>

   </filter>

   <filter-mapping>

        <filter-name>casHttpServletRequestWrapperFilter</filter-name>

        <url-pattern>/*</url-pattern>

   </filter-mapping>

   

<!-- *****************************************************************-->


   <filter>

        <filter-name>casAssertionThreadLocalFilter</filter-name>

        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>

   </filter>

   <filter-mapping>

        <filter-name>casAssertionThreadLocalFilter</filter-name>

        <url-pattern>/*</url-pattern>

   </filter-mapping>

     <!--******************单点登录CAS配置begin********************-->
</web-app>